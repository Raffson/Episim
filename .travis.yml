# This .travis.yml on:
# https://github.com/loot/loot/blob/dev/.travis.yml
# https://genbattle.bitbucket.io/blog/2016/01/17/c++-travis-ci/?

language: cpp
dist: trusty

#cache:
#  directories:
#    # Cache the boost install
#    - $HOME/boost_1_64_0/

addons:
  apt:
    sources: &default_sources
      - ubuntu-toolchain-r-test
    packages: &default_packages
      - libboost-all-dev
      - libhdf5-dev

matrix:
  include:

    - os: linux
      compiler: gcc
      env: CXX_COMPILER_NAME='g++-6'
      addons:
        apt:
          sources:  [*default_sources]
          packages: [*default_packages, g++-6]

    - os: linux
      compiler: clang
      env: CXX_COMPILER_NAME='clang++-3.8'
      addons:
        apt:
          sources:  [*default_sources, llvm-toolchain-trusty]
          packages: [*default_packages, clang++-3.8, libstdc++-6-dev]

    - os: linux
      compiler: clang
      env: CXX_COMPILER_NAME='clang++-4.0'
      addons:
        apt:
          sources:  [*default_sources, llvm-toolchain-trusty-4.0]
          packages: [*default_packages, clang++-4.0, libstdc++-6-dev]

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: CXX_COMPILER_NAME='c++' CLANGSOURCE=APPLE

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: CXX_COMPILER_NAME='/usr/local/bin/clang++-3.8' CLANGSOURCE=LLVM

before_install:
  # Check commit matches expected commit (because of Travis bug)
  - if [[ "$TRAVIS_COMMIT" != "$(git rev-parse HEAD)" ]]; then echo "Commit $(git rev-parse HEAD) doesn't match expected commit $TRAVIS_COMMIT"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] && [[ "$CLANGSOURCE" == "LLVM" ]]; then brew update; brew install --with-clang llvm38 && brew link --force --overwrite llvm38; fi
  # This needs to be done because we want to override Travis's definitions of CC and CXX that lead to old Ubuntu-packaged compilers
  - export CXX="$CXX_COMPILER_NAME"

install:
  # Download & unpack boost
  - sudo wget -O boost_1_64_0.tar.gz http://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.tar.gz/download -q
  - sudo tar xf boost_1_64_0.tar.gz > /dev/null 2>&1
  # Move into boost directory
  - cd boost_1_64_0/
  # Configure boost build
  #			--prefix: make sure boost is built in correct directory, so that cmake can later find it there
  #			--with-libraries: only build libraries that we actually need
  - sudo ./bootstrap.sh --prefix=$HOME/boost_1_64_0 --with-libraries=atomic,chrono,date_time,filesystem,iostreams,locale,log,regex,system,thread,serialization,mpi
  # Build boost
  - sudo ./b2 -q -a -j2 -d0 --disable-filesystem2 cxxflags="-v -std=c++11" link=static threading=multi install
  - cd ..

script:
  # Install stride
  #			STRIDE_BOOST_ROOT: specify where the correct version of boost can be found
  #			STRIDE_BOOST_NO_SYSTEM_PATHS: should be ON to prevent mixing different versions of boost
  - PARALLEL_MAKE=-j2 STRIDE_BOOST_ROOT=$HOME/boost_1_64_0 STRIDE_BOOST_NO_SYSTEM_PATHS=ON make all
  - PARALLEL_MAKE=-j2 make install
  - make test
